// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id               Int                @id @default(autoincrement())
  name             String
  cnpj             String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  User             User[]
  Team             Team[]
  Task             Task[]
  Goal             Goal[]
  ProcessGoalsTask ProcessGoalsTask[]
  TeamUser         TeamUser[]

  @@map("companies")
}

model TeamUser {
  id        Int      @id @default(autoincrement())
  idCompany Int
  idUser    Int
  idTeam    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  company   Company  @relation(fields: [idCompany], references: [id])
  user      User     @relation(fields: [idUser], references: [id])
  team      Team     @relation(fields: [idTeam], references: [id])

  @@map("teamUsers")
}

model Team {
  id               Int                @id @default(autoincrement())
  idCompany        Int
  name             String
  descriptions     String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  company          Company            @relation(fields: [idCompany], references: [id])
  TeamUser         TeamUser[]
  Goal             Goal[]
  ProcessGoalsTask ProcessGoalsTask[]
  ProcessTaskUser  ProcessTaskUser[]

  @@map("teams")
}

model User {
  id               Int                @id @default(autoincrement())
  idCompany        Int
  name             String
  email            String             @unique
  occupation       String
  roles            String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  company          Company            @relation(fields: [idCompany], references: [id])
  ProcessGoalsTask ProcessGoalsTask[]
  TeamUser         TeamUser[]
  Task             Task[]
  ProcessTaskUser  ProcessTaskUser[]

  @@map("users")
}

model Task {
  id               Int                @id @default(autoincrement())
  idCompany        Int
  idUser           Int
  idGoal           Int
  name             String
  descriptions     String
  done             Boolean            @default(false)
  initialDate      DateTime
  finalDate        DateTime
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  user             User               @relation(fields: [idUser], references: [id])
  company          Company            @relation(fields: [idCompany], references: [id])
  goal             Goal               @relation(fields: [idGoal], references: [id])
  ProcessGoalsTask ProcessGoalsTask[]
  ProcessTaskUser  ProcessTaskUser[]
  Subtask          Subtask[]

  @@map("tasks")
}

model Subtask {
  id           Int      @id @default(autoincrement())
  idTask       Int
  name         String
  descriptions String
  done         Boolean  @default(false)
  initialDate  DateTime
  finalDate    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  task         Task     @relation(fields: [idTask], references: [id])

  @@map("subtasks")
}

model Goal {
  id               Int                @id @default(autoincrement())
  idCompany        Int
  idTeam           Int
  name             String
  descriptions     String
  done             Boolean            @default(false)
  initialDate      DateTime
  finalDate        DateTime
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  company          Company            @relation(fields: [idCompany], references: [id])
  team             Team               @relation(fields: [idTeam], references: [id])
  ProcessGoalsTask ProcessGoalsTask[]
  Task             Task[]

  @@map("goals")
}

model ProcessGoalsTask {
  id              Int               @id @default(autoincrement())
  idCompany       Int
  idTask          Int
  idGoal          Int
  idTeam          Int
  done            Int
  initialDate     DateTime
  finalDate       DateTime
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  task            Task              @relation(fields: [idTask], references: [id])
  company         Company           @relation(fields: [idCompany], references: [id])
  goal            Goal              @relation(fields: [idGoal], references: [id])
  team            Team              @relation(fields: [idTeam], references: [id])
  User            User?             @relation(fields: [userId], references: [id])
  userId          Int?
  ProcessTaskUser ProcessTaskUser[]

  @@map("processGoalsTask")
}

model ProcessTaskUser {
  id                 Int              @id @default(autoincrement())
  idTask             Int
  idTeam             Int
  idUser             Int
  idProcessGoalsTask Int
  descriptions       String
  done               Boolean          @default(false)
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  task               Task             @relation(fields: [idTask], references: [id])
  team               Team             @relation(fields: [idTeam], references: [id])
  user               User             @relation(fields: [idUser], references: [id])
  ProcessGoalsTask   ProcessGoalsTask @relation(fields: [idProcessGoalsTask], references: [id])

  @@map("ProcessTaskUsers")
}
